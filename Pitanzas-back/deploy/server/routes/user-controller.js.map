{"version":3,"sources":["routes/user-controller.ts"],"names":[],"mappings":"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","file":"routes/user-controller.js","sourcesContent":["import * as express from \"express\";\nimport {UserService} from \"../services/user-service\";\nimport {User} from \"../models/user-model\";\nimport {IUser} from './../models/mongoose/user-mongoose';\nimport * as log4js from 'log4js';\n\nexport let usersRouter = express.Router();\n\nlet logger = log4js.getLogger(\"user-controller\");\n\n// obtenemos instancia nuestro servicio\nconst userService: UserService = UserService.getInstance();\n\n/**\n * Entraría por get con /users \n */\nusersRouter.route('/')\n\n.get( (req: express.Request, res: express.Response, next: express.NextFunction)=> {\n   userService.getUsers()\n    .then(_listUsers=>{res.send(JSON.stringify(_listUsers));})\n    .catch(error =>{return next(error)});\n})\n\n.post ( (req: express.Request, res: express.Response, next: express.NextFunction)=> {\n  let user:User = User.buildFromBody(req.body);\n  userService.saveUser(user)\n    .then(_user=>{res.send(JSON.stringify(_user));})\n    .catch(error =>{return next(error)});\n\n  /* Si el service se implementa con callback y no con Promise , se haría así la invocación \n   userService.saveUser(user,(userAux:IUser, error:Error)=>{\n       if (error){next(error);return;}\n        res.send(JSON.stringify(userAux)); \n   });*/ \n}) \n\n.put ( (req: express.Request, res: express.Response, next: express.NextFunction)=> {\n   let user:User = User.buildFromBody(req.body);\n   userService.updateUser(user)\n    .then(_user=>{res.send(JSON.stringify(_user));})\n    .catch(error =>{return next(error)});\n}) \n\n\nusersRouter.route('/:id')\n\n.get( (req: express.Request, res: express.Response, next: express.NextFunction)=> { \n    userService.getUser(req.params.id) \n     .then(_user=>{res.send(JSON.stringify(_user));})\n     .catch(error =>{return next(error)});\n}) \n\n.delete( (req: express.Request, res: express.Response, next: express.NextFunction)=> { \n   userService.deleteUser(req.params.id )\n    .then(_user=>{res.send(JSON.stringify(_user));})\n    .catch(error =>{return next(error)});\n}) \n\n;\n\n\n"],"sourceRoot":"/source/"}