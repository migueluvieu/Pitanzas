{"version":3,"sources":["dao/user-dao.ts"],"names":["UserDAO","UserDAO.constructor","UserDAO.getInstance","UserDAO.findAll","UserDAO.findById","UserDAO.findByName","UserDAO.create","UserDAO.findOrCreate","UserDAO.findByIdAndUpdate","UserDAO.findByIdAndRemove"],"mappings":"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","file":"dao/user-dao.js","sourcesContent":["\r\nimport * as mongoose from 'mongoose';\r\nimport * as log4js from 'log4js';\r\nimport {User} from './../models/user-model'; \r\nimport {UserMongoose, IUser} from './../models/mongoose/user-mongoose';\r\nimport {UserExistError,UserNotExistError} from './../exceptions/user-exceptions';\r\nimport {AppConfig as config} from './../config/app-config';\r\nimport {Constantes as _ }  from './../common/constantes';\r\n\r\nlet logger = log4js.getLogger(\"user-dao\");\r\n\r\nexport class UserDAO {\r\n\r\n  private static _instance:UserDAO = new UserDAO();\r\n  \r\n   /**\r\n     * Devuelve instancia de UserDAO. Singleton\r\n     */\r\n   constructor() {\r\n    if(UserDAO._instance){\r\n             throw(new Error(config.msg(_.ERR_USER_INSTANCIA)));\r\n        }\r\n        UserDAO._instance = this;\r\n    }\r\n    \r\n    /**\r\n     * Devuelve instancia de UserDAO. Singleton\r\n     * @returns {UserDAO}\r\n     */\r\n   static getInstance():UserDAO {\r\n        return UserDAO._instance;    \r\n    }\r\n\r\n    /**\r\n     * Busca todos los usuarios\r\n     * @returns {Promise <IUser[]>}\r\n     */ \r\n   findAll(): Promise <IUser[]> {\r\n    logger.debug(\"findAll\");\r\n    return new Promise <IUser[]> ((resolve, reject) => {            \r\n      UserMongoose.model.find()\r\n        .sort('-name') //order desc\r\n        .exec()\r\n        .onResolve((err, users) => {\r\n          err ? reject(new Error(err)) : resolve(users);\r\n        });\r\n      })\r\n    }\r\n  \r\n    /**\r\n     * Busca un usuario\r\n     * @param {string} _id\r\n     * @returns {Promise <IUser>}\r\n     */  \r\n    findById(_id: string): Promise <IUser> {\r\n      logger.debug(\"findById\",_id);\r\n      return new Promise <IUser > ((resolve, reject) => {         \r\n        UserMongoose.model.findById(_id)\r\n          .exec()\r\n          .onResolve((err, user) => {\r\n            err ? reject(err) : resolve(user);\r\n          });\r\n      })\r\n    }\r\n\r\n   /**\r\n     * Busca un usuario\r\n     * @param {string} _id\r\n     * @returns {Promise <IUser>}\r\n     */  \r\n    findByName(filter:IUser): Promise <IUser> {\r\n    logger.debug(\"findFilter\",filter);\r\n    return new Promise <IUser > ((resolve, reject) => {         \r\n       UserMongoose.model.findOne({name:filter.name})\r\n        .exec()\r\n        .onResolve((err, user) => {\r\n          err ? reject(err) : resolve(user);\r\n        });\r\n      })\r\n    }\r\n\r\n   /**\r\n     * Crea un usuario\r\n     * @param {string} _id\r\n     * @returns {Promise <IUser>}\r\n     */  \r\n  create(user:IUser): Promise<IUser> {   \r\n   logger.debug(\"create\",user);\r\n   return new Promise <IUser> ((resolve, reject) => { \r\n     if (user.id) reject(new UserExistError());\r\n      UserMongoose.model.create(user)\r\n        .onResolve((err, user) => {          \r\n              err ?  reject(new Error(err)) : resolve(user);\r\n          }); \r\n      });\r\n     }\r\n    /**\r\n     * Busca un usuario y si no lo encuentra, lo crea\r\n     * @param {User} user\r\n     * @returns {Promise<IUser>}\r\n     */\r\n  findOrCreate(user:User): Promise<IUser> {   \r\n   logger.debug(\"findOrCreate\",user);\r\n   return new Promise <IUser> ((resolve, reject) => {      \r\n       UserMongoose.model.findOne({         \r\n          _id: user.id\r\n        })\r\n        .exec()\r\n        .then(\r\n          userAux => {\r\n            if (userAux) {\r\n              return resolve(userAux);\r\n            }\r\n\r\n            UserMongoose.model.create(user.payload)\r\n            .onResolve((err, user) => {          \r\n              err ?  reject(err) : resolve(user);\r\n            });\r\n          })         \r\n    });\r\n    \r\n  }\r\n\r\n/**\r\n * Busca un usuario y si lo encuentra lo actualiza\r\n * @param {User} user\r\n * @returns {Promise<IUser>}\r\n */\r\nfindByIdAndUpdate(user:User): Promise<IUser> { \r\n   logger.debug(\"findByIdAndUpdate\",user);  \r\n   return new Promise <IUser> ((resolve, reject) => {      \r\n     //para que la callback devuelva el objeto modificado \r\n     //es importante añadir el parámetro{new:true} ya que si no,\r\n     //devuelve el objeto original \r\n       UserMongoose.model.findByIdAndUpdate(user.id, user.payload,{new:true})\r\n        .exec()\r\n        .then(\r\n          userAux => {\r\n            if (userAux) {\r\n              return resolve(userAux);\r\n            } \r\n            return reject(new UserNotExistError());\r\n          })        \r\n    });\r\n    \r\n  }\r\n\r\n/**\r\n * Busca un usuario y si lo encuentra lo elimina\r\n * @param {string} id\r\n * @returns {Promise<IUser>}\r\n */\r\nfindByIdAndRemove(id:string): Promise<IUser> { \r\n   logger.debug(\"findByIdAndRemove\",id);  \r\n   return new Promise <IUser> ((resolve, reject) => {     \r\n       UserMongoose.model.findByIdAndRemove(id)\r\n        .exec()\r\n        .then(userAux => {\r\n          if (userAux) {\r\n            return resolve(userAux);\r\n          } \r\n          return reject(new UserNotExistError());\r\n        });\r\n    });\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"/source/"}