{"version":3,"sources":["models/user-model.ts"],"names":["User","User.constructor","User.build","User.buildFromBody","User.name","User.age","User.email","User.id","User.payload"],"mappings":"AAGA;;;GAGG;AACH;IAECA;;;OAGGA;IACFA,cAAoBA,QAAeA;QAAfC,aAAQA,GAARA,QAAQA,CAAOA;IACnCA,CAACA;;IAEHD;;;;;;;;OAQGA;IACIA,UAAKA,GAAZA,UAAcA,IAAWA,EAAEA,GAAUA,EAAEA,KAAYA;QAC/CE,IAAIA,GAAGA,GAAOA,EAACA,IAAIA,EAACA,IAAIA,EAAEA,GAAGA,EAACA,GAAGA,EAACA,KAAKA,EAACA,KAAKA,EAACA,CAAEA;QAChDA,MAAMA,CAACA,IAAIA,IAAIA,CAACA,GAAGA,CAACA,CAACA;IACvBA,CAACA;;IAEDF;;;;;;OAMGA;IACEA,kBAAaA,GAApBA,UAAsBA,IAAQA;QAC1BG,MAAMA,CAACA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,CAACA;IACxBA,CAACA;;IAIDH,sBAAIA,sBAAIA;QADTA,kBAAkBA;aACjBA;YACEI,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,IAAIA,CAACA;QAC5BA,CAACA;aAcDJ,UAASA,IAAWA;YAClBI,IAAIA,CAACA,QAAQA,CAACA,IAAIA,GAAGA,IAAIA,CAACA;QAC5BA,CAACA;;;OAhBAJ;IAEDA,sBAAIA,qBAAGA;aAAPA;YACEK,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAACA;QAC3BA,CAACA;aAcDL,UAAQA,GAAUA;YAChBK,IAAIA,CAACA,QAAQA,CAACA,GAAGA,GAAGA,GAAGA,CAACA;QAC1BA,CAACA;;;OAhBAL;IAEDA,sBAAIA,uBAAKA;aAATA;YACEM,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,KAAKA,CAACA;QAC7BA,CAACA;aAcDN,UAAUA,KAAYA;YACpBM,IAAIA,CAACA,QAAQA,CAACA,KAAKA,GAAGA,KAAKA,CAACA;QAC9BA,CAACA;;;OAhBAN;IAEDA,sBAAIA,oBAAEA;aAANA;YACEO,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA,GAAGA,CAACA;QAC3BA,CAACA;aAcAP,UAAOA,EAASA;YACfO,IAAIA,CAACA,QAAQA,CAACA,EAAEA,GAAGA,EAAEA,CAACA;QACxBA,CAACA;;;OAhBAP;IAkBDA,sBAAIA,yBAAOA;aAAXA;YACEQ,MAAMA,CAACA,IAAIA,CAACA,QAAQA,CAACA;QACvBA,CAACA;;;OAAAR;IAGHA,WAACA;AAADA,CAzEA,AAyECA,IAAA;AAzEY,YAAI,OAyEhB,CAAA","file":"models/user-model.js","sourcesContent":["\r\nimport {IUser} from './../models/mongoose/user-mongoose';\r\n\r\n/**\r\n * @export\r\n * @class User\r\n */\r\nexport class User {\r\n\r\n /**\r\n  * Los datos del usuario quedarán encapsulados en la vble payload \r\n  * @param {IUser} _payload\r\n  */\r\n  constructor(private _payload: IUser) {\r\n  };\r\n\r\n/**\r\n * \r\n * Build para obtener objeto User a partir de los parámetros\r\n * @static\r\n * @param {string} name\r\n * @param {number} age\r\n * @param {string} email\r\n * @returns {User}\r\n */\r\nstatic build (name:string, age:number, email:string):User {    \r\n    let aux: any= {name:name, age:age,email:email} ;\r\n    return new User(aux);\r\n  };\r\n\r\n  /**\r\n   * \r\n   * Build para obtener objeto User a partir de un data\r\n   * @static\r\n   * @param {*} data\r\n   * @returns {User}\r\n   */\r\nstatic buildFromBody (data:any):User { \r\n    return new User(data);\r\n  };\r\n\r\n\r\n //getters y setter\r\n  get name(): string {\r\n    return this._payload.name;\r\n  }\r\n\r\n  get age(): number {\r\n    return this._payload.age;\r\n  }\r\n\r\n  get email(): string {\r\n    return this._payload.email;\r\n  }\r\n\r\n  get id(): string {\r\n    return this._payload._id;\r\n  }\r\n\r\n  set name(name:string)  {\r\n    this._payload.name = name;\r\n  }\r\n\r\n  set age(age:number)  {\r\n    this._payload.age = age;\r\n  }\r\n\r\n  set email(email:string)  {\r\n    this._payload.email = email;\r\n  }\r\n  \r\n   set id(id:string)  {\r\n    this._payload.id = id;\r\n  }\r\n\r\n  get payload():IUser{\r\n    return this._payload;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n"],"sourceRoot":"/source/"}